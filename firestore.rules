rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // This rule allows anyone on the internet to view, edit, and delete
    // all data in your Firestore database. It is useful for getting
    // started, but it is configured to expire after 30 days because it
    // leaves your app open to attackers. At that time, all client
    // requests to your Firestore database will be denied.
    //
    // Make sure to write security rules for your app before that time, or else
    // your app will lose access to your Firestore database

    match /{collectionName}/{documentId} {
    	// everything else can only be read by both app user
      allow read: if collectionName == "users" || collectionName == "routes";
    }
    	match /{document=**}{
    	allow read: if request.auth != null;
    	}
    
    
    
    
    match /vehicles/{document=**} {
    
    	// if user is using smartrider
   		allow read: if request.auth != null && exists(/databases/$(database)/documents/users/$(request.auth.uid));
      
      // if user is using smartdriver
      allow read,write: if request.auth != null && !exists(/databases/$(database)/documents/users/$(request.auth.uid));
		}
    
    match /orders/{document=**}{
    
    	// both app users can read and write orders test
    	allow read,write: if request.auth != null;
    }
  }
}